// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(uuid())
  name     String
  email    String     @unique
  password String
  despesas Despesas[]
  rendas   Renda[]

  @@map("users")
}

model Despesas {
  id             String    @id @default(uuid())
  name           String
  data           String?
  valor          Decimal?
  dataVencimento String?
  status         String?
  quantidade     Decimal?
  valorUnitario  Decimal?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime? @updatedAt @map("updated_at")
  userId         String    @map("user_id")
  categoriaId    String?   @map("categoria_id")
  produtoId      String?   @map("produto_id")

  user      User       @relation(fields: [userId], references: [id])
  categoria Categoria? @relation(fields: [categoriaId], references: [id])
  produto   Produto?   @relation(fields: [produtoId], references: [id])

  @@map("despesas")
}

model Categoria {
  id       String     @id @default(uuid())
  name     String
  Despesas Despesas[]
  Produto  Produto[]

  @@map("categorias")
}

model Produto {
  id                String    @id @default(uuid())
  name              String
  quantidadeEstoque Decimal?
  quantidadeMinima  Decimal?
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime? @updatedAt @map("updated_at")
  categoriaId       String?

  categoria Categoria? @relation(fields: [categoriaId], references: [id])
  Despesas  Despesas[]

  @@map("produtos")
}

model Renda {
  id        String    @id @default(uuid())
  name      String
  data      String?
  valor     Decimal
  status    String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  userId    String    @map("user_id")

  user User @relation(fields: [userId], references: [id])

  @@map("rendas")
}
